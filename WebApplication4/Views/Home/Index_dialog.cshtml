@{
    ViewData["Title"] = "Ana Sayfa";
}

<div ng-controller="DialogBasicUsage" class="md-padding" id="popupContainer" ng-cloak>
    <p class="inset">
        Open a dialog over the app's content. Press escape or click outside to close the dialog and
        send focus back to the triggering button.
    </p>
    <div class="dialog-demo-content" layout="row" layout-wrap layout-margin>
        <md-button class="md-primary md-raised" ng-click="showAlert($event)" flex="100" flex-gt-md="auto">  Alert Dialog </md-button>
        <md-button class="md-primary md-raised" ng-click="showConfirm($event)" flex="100" flex-gt-md="auto"> Confirm Dialog </md-button>
        <md-button class="md-primary md-raised" ng-click="showAdvanced($event)" flex="100" flex-gt-md="auto"> Custom Dialog </md-button>
        <div hide-gt-sm layout="row" layout-align="center center" flex="100">
            <md-checkbox ng-model="customFullscreen" aria-label="Fullscreen Custom Dialog">Custom Dialog Fullscreen</md-checkbox>
        </div>
        <md-button class="md-primary md-raised" ng-click="showTabDialog($event)" flex="100" flex-gt-md="auto"> Tab Dialog </md-button>
    </div>
    <p class="footer">Note: The <b>Confirm</b> dialog does not use <code>$mdDialog.clickOutsideToClose(true)</code>.</p>
    <div ng-if="status">
        <br />
        <b layout="row" layout-align="center center" class="md-padding"> {{status}} </b>
    </div>
</div>

<section class="demo-container">
    <md-toolbar class="demo-toolbar">
        <div class="md-toolbar-tools">
            <h3>Aç Kapat Efekt</h3>
        </div>
    </md-toolbar>
    <div class="md-whiteframe-z1 docs-list">
        <div ng-controller="DialogOpenFromCloseTo" layout="row" ng-cloak style="height: 300px">
            <style>
                .edgePadding {
                    padding-left: 25px;
                    padding-right: 25px;
                }
            </style>
            <div layout="column" layout-align="center center"
                 style="background-color: #f2f2f2" class="md-padding">
                <span id="left">left</span>
            </div>
            <div layout="column" layout-align="center start" layout-padding flex>
                <p class="inset">
                    A dialog can specify its origin and target with <code>openFrom</code> and
                    <code>closeTo</code> properties.
                    The options showFrom and closeTo can be specified as a string [where internally
                    querySelector( ) is used to perform the DOM element lookup],
                    element or an Rect object [with top, left, width, height fields].
                </p>
                <div class="dialog-demo-content" layout="column" layout-align="center center" style="width:100%">
                    <md-button class="md-primary md-raised edgePadding" ng-click="openFromLeft()">
                        Open From Left - Close To Right
                    </md-button>
                    <md-button class="md-primary md-raised edgePadding" ng-click="openOffscreen()">
                        Open From Top Left - Close Slide Down
                    </md-button>
                </div>
            </div>
            <div layout="column" layout-align="center center"
                 style="background-color: #f2f2f2" class="md-padding">
                <span id="right">right</span>
            </div>
        </div>
    </div>
</section>

        @section scripts{
<script>
    CrmApp
        .controller('DialogBasicUsage', function ($scope, $mdDialog, $mdMedia) {
            $scope.status = '  ';
            $scope.customFullscreen = $mdMedia('xs') || $mdMedia('sm');
            $scope.showAlert = function (ev) {
                // Appending dialog to document.body to cover sidenav in docs app
                // Modal dialogs should fully cover application
                // to prevent interaction outside of dialog
                $mdDialog.show(
                  $mdDialog.alert()
                    .parent(angular.element(document.querySelector('#popupContainer')))
                    .clickOutsideToClose(true)
                    .title('This is an alert title')
                    .textContent('You can specify some description text in here.')
                    .ariaLabel('Alert Dialog Demo')
                    .ok('Got it!')
                    .targetEvent(ev)
                );
            };
            $scope.showConfirm = function (ev) {
                // Appending dialog to document.body to cover sidenav in docs app
                var confirm = $mdDialog.confirm()
                      .title('Would you like to delete your debt?')
                      .textContent('All of the banks have agreed to forgive you your debts.')
                      .ariaLabel('Lucky day')
                      .targetEvent(ev)
                      .ok('Please do it!')
                      .cancel('Sounds like a scam');
                $mdDialog.show(confirm).then(function () {
                    $scope.status = 'You decided to get rid of your debt.';
                }, function () {
                    $scope.status = 'You decided to keep your debt.';
                });
            };
            $scope.showAdvanced = function (ev) {
                var useFullScreen = ($mdMedia('sm') || $mdMedia('xs')) && $scope.customFullscreen;
                $mdDialog.show({
                    controller: DialogController,
                    templateUrl: '/tmpl/dialog/dialog1.tmpl.html',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    fullscreen: useFullScreen
                })
                .then(function (answer) {
                    $scope.status = 'You said the information was "' + answer + '".';
                }, function () {
                    $scope.status = 'You cancelled the dialog.';
                });
                $scope.$watch(function () {
                    return $mdMedia('xs') || $mdMedia('sm');
                }, function (wantsFullScreen) {
                    $scope.customFullscreen = (wantsFullScreen === true);
                });
            };
            $scope.showTabDialog = function (ev) {
                $mdDialog.show({
                    controller: DialogController,
                    templateUrl: '/tmpl/dialog/tabDialog.tmpl.html',
                    parent: angular.element(document.body),
                    targetEvent: ev,
                    clickOutsideToClose: true
                })
                    .then(function (answer) {
                        $scope.status = 'You said the information was "' + answer + '".';
                    }, function () {
                        $scope.status = 'You cancelled the dialog.';
                    });
            };
        })
        .controller('DialogOpenFromCloseTo', function ($scope, $mdDialog) {
            $scope.openFromLeft = function () {
                $mdDialog.show(
                  $mdDialog.alert()
                    .clickOutsideToClose(true)
                    .title('Opening from the left')
                    .textContent('Closing to the right!')
                    .ariaLabel('Left to right demo')
                    .ok('Nice!')
                    // You can specify either sting with query selector
                    .openFrom('#left')
                    // or an element
                    .closeTo(angular.element(document.querySelector('#right')))
                );
            };
            $scope.openOffscreen = function () {
                $mdDialog.show(
                  $mdDialog.alert()
                    .clickOutsideToClose(true)
                    .title('Opening from offscreen')
                    .textContent('Closing to offscreen')
                    .ariaLabel('Offscreen Demo')
                    .ok('Amazing!')
                    // Or you can specify the rect to do the transition from
                    .openFrom({
                        top: -50,
                        width: 30,
                        height: 80
                    })
                    .closeTo({
                        left: 1500
                    })
                );
            };
        });
    function DialogController($scope, $mdDialog) {
        $scope.hide = function () {
            $mdDialog.hide();
        };
        $scope.cancel = function () {
            $mdDialog.cancel();
        };
        $scope.answer = function (answer) {
            $mdDialog.hide(answer);
        };
    }



</script>
        }
